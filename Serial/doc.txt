/* 
操作流程 

命令的格式 和 update 的格式 可能有差异 只提取关键词构建 update 示例格式传给 update 即可

1. 监听 missionList emit 事件
2. 接到 missionList 后 读取 missionList.json 并打开串口
3. 遍历 missionList.json 解析为单条命令
4. 单条命令的 functionCode 
为 
11 basicSetting
14 schedule
13 windowSetting

则调用 update

update.basicSetting({ 
  id: 801000, 
  totalPower: 1000, 
  reactivePower: 400, 
  activePower: 990, 
  inductorPower: 990, 
  delay1: 60, 
  delay2: 60, 
  delay3: 60, 
  retry: 4 
});

update.schedule({
  id: 801000,
  period: 1,
  mode: 1,
  power: 0,
  weekSchedule: [
    {"haltHour":0,"haltMinute":0,"openHour":7,"openMinute":30},
    {"haltHour":0,"haltMinute":0,"openHour":7,"openMinute":30},
    {"haltHour":0,"haltMinute":0,"openHour":7,"openMinute":30},
    {"haltHour":0,"haltMinute":0,"openHour":7,"openMinute":30},
    {"haltHour":0,"haltMinute":0,"openHour":7,"openMinute":30},
    {"haltHour":0,"haltMinute":0,"openHour":7,"openMinute":30},
    {"haltHour":0,"haltMinute":0,"openHour":7,"openMinute":30}
  ]
});

update.windowSetting({
  id: 801000,
  powerA: 0,
  powerB: 0,
  factorA: 100,
  factorB: 100
});

5. 将命令通过 makePacket 制作为 Buffer 传给 sendCommand

6. 等待 sendCommand 的返回结果

7. 使用 parsePacket 解析返回结果

8. 根据 parsePacket 的结果
如果functionCode
为

87 status

update.status({ 
  id: 801000, 
  statusCode: 1, 
  reasonCode: 0, 
  voltage: 220.5, 
  current: 1.2, 
  power: 200.0 
});

82 readKWHR

update.readKWHR({
  id: 801000,
  rechargeKWH: 0,
  initialKWH: 100,
  usedKWH: 10,
  totalKWH: 90
});

9. functionList.json 所有 deviceID 遍历并发送完后
emit 'missionSuccess'

*/